var documenterSearchIndex = {"docs":
[{"location":"#![POMATO-SOUP](https://raw.githubusercontent.com/richard-weinhold/pomato/main/docs/_static/graphics/pomato_logo_small.png)-MarketModel-module-of-POMATO","page":"Introducion","title":"(Image: POMATO SOUP) MarketModel module of POMATO","text":"","category":"section"},{"location":"","page":"Introducion","title":"Introducion","text":"(Image: MarketModel)","category":"page"},{"location":"#Overview","page":"Introducion","title":"Overview","text":"","category":"section"},{"location":"","page":"Introducion","title":"Introducion","text":"The Power Market Tool (POMATO) aims to enable research and analyses of modern real-world electricity markets in the context of the physical transmission system and its secure operation. To analyze relevant market and operational processes POMATO provides: Simultaneous zonal market clearing and nodal power flow computation, a scalable and fast SCOPF algorithm, and risk-aware optimal power flow via chance constraints. All optimization features rely on Julia/JuMP, leveraging its accessibility, computational performance, and solver interfaces.","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"This repository holds these features as a individual julia package for easier maintenance, testing and documentation. However it is eventually embedded in a Python front-end, providing flexible and easily maintainable data processing and user interaction features and is not meant so be used on its own. Please see the corresponding publication and the (POMATO repository) for further information.","category":"page"},{"location":"#Installation","page":"Introducion","title":"Installation","text":"","category":"section"},{"location":"","page":"Introducion","title":"Introducion","text":"This package is meant to be used in conjunction with the python POMATO model, which embeds its features and installs it automatically. ","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"Stand alone usage is possible, however specificity formatted data. ","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"Installation can be done directly from git via: ","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"] add https://github.com/richard-weinhold/MarketModel","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"or from a local clone/fork of the repository via: ","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"] add develop --local path-to-repository","category":"page"},{"location":"","page":"Introducion","title":"Introducion","text":"The recommended julia version is 1.5, although compatibility is given for version >= 1.3, but not continuously tested. ","category":"page"},{"location":"#Exposed-function-of-the-MarketModel","page":"Introducion","title":"Exposed function of the MarketModel","text":"","category":"section"},{"location":"","page":"Introducion","title":"Introducion","text":"run_market_model","category":"page"},{"location":"#MarketModel.run_market_model","page":"Introducion","title":"MarketModel.run_market_model","text":"runmarketmodel(datadir::String, resultdir::String, inputoptimizer; returnresult::Bool=false,                  redispatch::Bool=false)\n\nSolves an economic dispatch problem for given data in data_dir::String using the supplied solver supplied as input_optimizer. Note, input_optimizer has to be the Julia Package itself. Optionally, the economic dispatch can be redispatched for feasibility in a given network representation using the optional argument redispatch::Bool. \n\nResults are saved as in .csv files into result_dir::String. Per default the function returns nothing, but the Result struct can be returned with optional argument return_result::Bool. \n\n\n\n\n\n","category":"function"},{"location":"#Related-Publications","page":"Introducion","title":"Related Publications","text":"","category":"section"},{"location":"","page":"Introducion","title":"Introducion","text":"(preprint) Weinhold and Mieth (2020), Power Market Tool (POMATO) for the Analysis of Zonal   Electricity Markets\nWeinhold and Mieth (2020), Fast Security-Constrained Optimal Power Flow through   Low-Impact and Redundancy Screening\nSch√∂nheit, Weinhold, Dierstein (2020), The impact of different strategies for generation   shift keys (GSKs) on  the flow-based market coupling domain: A model-based analysis of Central Western Europe","category":"page"}]
}
